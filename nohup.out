[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------------< com.hari:lms >----------------------------
[INFO] Building Hari Learning Management System 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:3.1.5:run (default-cli) > test-compile @ lms >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ lms ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 32 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ lms ---
[INFO] skip non existing resourceDirectory /Users/hariparthu/Hari Documents/JAVA/Hari LMS/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:testCompile (default-testCompile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot-maven-plugin:3.1.5:run (default-cli) < test-compile @ lms <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:3.1.5:run (default-cli) @ lms ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2025-09-19 14:48:42 [main] INFO  com.hari.lms.LmsApplication - Starting LmsApplication using Java 21.0.8 with PID 28601 (/Users/hariparthu/Hari Documents/JAVA/Hari LMS/target/classes started by hariparthu in /Users/hariparthu/Hari Documents/JAVA/Hari LMS)
2025-09-19 14:48:42 [main] DEBUG com.hari.lms.LmsApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-09-19 14:48:42 [main] INFO  com.hari.lms.LmsApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-19 14:48:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-19 14:48:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
2025-09-19 14:48:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-19 14:48:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-19 14:48:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-09-19 14:48:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-19 14:48:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 457 ms
2025-09-19 14:48:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-19 14:48:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:lmsdb user=ROOT
2025-09-19 14:48:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-19 14:48:42 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:lmsdb'
2025-09-19 14:48:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-19 14:48:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-09-19 14:48:42 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-09-19 14:48:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-19 14:48:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-19 14:48:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
Hibernate: 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
Hibernate: 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
Hibernate: 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
Hibernate: 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
Hibernate: 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
Hibernate: 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
2025-09-19 14:48:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:48:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-19 14:48:43 [main] DEBUG c.h.lms.security.jwt.AuthTokenFilter - Filter 'authenticationJwtTokenFilter' configured for use
2025-09-19 14:48:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-19 14:48:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@677b00ae, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76802b8c, org.springframework.security.web.context.SecurityContextHolderFilter@65ad56c2, org.springframework.security.web.header.HeaderWriterFilter@751d9a40, org.springframework.security.web.csrf.CsrfFilter@17aadd1c, org.springframework.security.web.authentication.logout.LogoutFilter@68819fae, com.hari.lms.security.jwt.AuthTokenFilter@73c25e8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@65d07158, org.springframework.security.web.session.ConcurrentSessionFilter@f571c0d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@464fecb1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55c9400d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10bcceb5, org.springframework.security.web.session.SessionManagementFilter@113773b5, org.springframework.security.web.access.ExceptionTranslationFilter@764a5191, org.springframework.security.web.access.intercept.AuthorizationFilter@782cd00]
2025-09-19 14:48:43 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-09-19 14:48:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-09-19 14:48:43 [main] INFO  com.hari.lms.LmsApplication - Started LmsApplication in 1.92 seconds (process running for 2.015)
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:48:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default ADMIN user password: admin / admin123
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default INSTRUCTOR user password: instructor / instructor123
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default STUDENT user password: student / student123

🎓 HariLMS Demo Users Ready!
==================================
👑 ADMIN    : admin / admin123
👨‍🏫 INSTRUCTOR: instructor / instructor123
👨‍🎓 STUDENT   : student / student123
==================================

2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:48:44 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        courses c1_0
Hibernate: 
    select
        count(*) 
    from
        courses c1_0
🔍 Current course count: 17
⏭️ Skipping course creation - 17 courses already exist

=======================================================
   Hari LMS Application Started Successfully! 🚀
=======================================================
   🌐 Application URL: http://localhost:8080
   📚 Swagger UI: http://localhost:8080/swagger-ui.html
   📖 API Docs: http://localhost:8080/api-docs
=======================================================

2025-09-19 14:49:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-19 14:49:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-19 14:49:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-19 14:49:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /
2025-09-19 14:49:05 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:49:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured HEAD /
2025-09-19 14:49:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /?id=5c8ba7de-9c01-40d5-ba00-8809ea41572f&vscodeBrowserReqId=1758273551658
2025-09-19 14:49:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:49:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /?id=5c8ba7de-9c01-40d5-ba00-8809ea41572f&vscodeBrowserReqId=1758273551658
2025-09-19 14:49:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-09-19 14:49:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:49:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-09-19 14:49:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-19 14:49:42 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:49:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login
2025-09-19 14:49:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:49:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 6A121093CE7A0E2DCFB813715E646264, for principal com.hari.lms.security.UserDetailsImpl@20
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@22578978]
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-09-19 14:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /dashboard
2025-09-19 14:49:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-09-19 14:49:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
2025-09-19 14:49:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /dashboard
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
Hibernate: 
    select
        count(*) 
    from
        users u1_0
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        courses c1_0
Hibernate: 
    select
        count(*) 
    from
        courses c1_0
2025-09-19 14:49:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        enrollments e1_0
Hibernate: 
    select
        count(*) 
    from
        enrollments e1_0
2025-09-19 14:49:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /logout
2025-09-19 14:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
2025-09-19 14:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.logout.LogoutFilter - Logging out [UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@20, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
2025-09-19 14:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.l.SecurityContextLogoutHandler - Invalidated session 6A121093CE7A0E2DCFB813715E646264
2025-09-19 14:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /login?logout=true
2025-09-19 14:49:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login?logout=true
2025-09-19 14:49:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:49:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login?logout=true
2025-09-19 14:50:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:50:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/login
2025-09-19 14:50:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-19 14:50:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-19 14:50:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:50:01 [http-nio-8080-exec-10] ERROR c.h.l.security.jwt.AuthEntryPointJwt - Unauthorized error: Full authentication is required to access this resource
2025-09-19 14:50:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:50:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/login
2025-09-19 14:50:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-19 14:50:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-19 14:50:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:50:07 [http-nio-8080-exec-1] ERROR c.h.l.security.jwt.AuthEntryPointJwt - Unauthorized error: Full authentication is required to access this resource
2025-09-19 14:52:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /
2025-09-19 14:52:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:52:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured HEAD /
2025-09-19 14:53:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:53:34 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:53:34 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:53:34 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:53:34 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:53:34 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:53:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-19 14:53:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------------< com.hari:lms >----------------------------
[INFO] Building Hari Learning Management System 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:3.1.5:run (default-cli) > test-compile @ lms >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ lms ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 32 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ lms ---
[INFO] skip non existing resourceDirectory /Users/hariparthu/Hari Documents/JAVA/Hari LMS/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:testCompile (default-testCompile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot-maven-plugin:3.1.5:run (default-cli) < test-compile @ lms <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:3.1.5:run (default-cli) @ lms ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2025-09-19 14:54:34 [main] INFO  com.hari.lms.LmsApplication - Starting LmsApplication using Java 21.0.8 with PID 36795 (/Users/hariparthu/Hari Documents/JAVA/Hari LMS/target/classes started by hariparthu in /Users/hariparthu/Hari Documents/JAVA/Hari LMS)
2025-09-19 14:54:34 [main] DEBUG com.hari.lms.LmsApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-09-19 14:54:34 [main] INFO  com.hari.lms.LmsApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-19 14:54:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-19 14:54:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-09-19 14:54:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-19 14:54:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-19 14:54:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-09-19 14:54:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-19 14:54:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 448 ms
2025-09-19 14:54:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-19 14:54:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:lmsdb user=ROOT
2025-09-19 14:54:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-19 14:54:35 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:lmsdb'
2025-09-19 14:54:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-19 14:54:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-09-19 14:54:35 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-09-19 14:54:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-19 14:54:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-19 14:54:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
Hibernate: 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
Hibernate: 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
Hibernate: 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
Hibernate: 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
Hibernate: 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
Hibernate: 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
2025-09-19 14:54:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
2025-09-19 14:54:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:54:35 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-19 14:54:35 [main] DEBUG c.h.lms.security.jwt.AuthTokenFilter - Filter 'authenticationJwtTokenFilter' configured for use
2025-09-19 14:54:36 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-19 14:54:36 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ead88dd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fbcba93, org.springframework.security.web.context.SecurityContextHolderFilter@5ace491, org.springframework.security.web.header.HeaderWriterFilter@f571c0d, org.springframework.security.web.csrf.CsrfFilter@606b9417, org.springframework.security.web.authentication.logout.LogoutFilter@76802b8c, com.hari.lms.security.jwt.AuthTokenFilter@37b97394, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@13e3f9a9, org.springframework.security.web.session.ConcurrentSessionFilter@55c9400d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@549d1a11, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@717646f1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39e347c, org.springframework.security.web.session.SessionManagementFilter@221f7bf5, org.springframework.security.web.access.ExceptionTranslationFilter@22c1cc8d, org.springframework.security.web.access.intercept.AuthorizationFilter@128e7fc4]
2025-09-19 14:54:36 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-09-19 14:54:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-09-19 14:54:36 [main] INFO  com.hari.lms.LmsApplication - Started LmsApplication in 1.895 seconds (process running for 1.991)
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default ADMIN user password: admin / admin123
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default INSTRUCTOR user password: instructor / instructor123
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default STUDENT user password: student / student123

🎓 HariLMS Demo Users Ready!
==================================
👑 ADMIN    : admin / admin123
👨‍🏫 INSTRUCTOR: instructor / instructor123
👨‍🎓 STUDENT   : student / student123
==================================

2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:54:36 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        courses c1_0
Hibernate: 
    select
        count(*) 
    from
        courses c1_0
🔍 Current course count: 17
⏭️ Skipping course creation - 17 courses already exist

=======================================================
   Hari LMS Application Started Successfully! 🚀
=======================================================
   🌐 Application URL: http://localhost:8080
   📚 Swagger UI: http://localhost:8080/swagger-ui.html
   📖 API Docs: http://localhost:8080/api-docs
=======================================================

2025-09-19 14:55:01 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-19 14:55:01 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-19 14:55:01 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-19 14:55:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-19 14:55:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:55:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login
2025-09-19 14:55:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-19 14:55:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:55:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login
2025-09-19 14:55:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-19 14:55:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:55:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session AE4C5494CBCF3F0D4B546FB459F0CA1C, for principal com.hari.lms.security.UserDetailsImpl@22
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@5302813]
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]
2025-09-19 14:55:23 [http-nio-8080-exec-7] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /dashboard
2025-09-19 14:55:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-09-19 14:55:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:55:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/dashboard?continue to session
2025-09-19 14:55:38 [http-nio-8080-exec-9] ERROR c.h.l.security.jwt.AuthEntryPointJwt - Unauthorized error: Full authentication is required to access this resource
2025-09-19 14:55:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /student
2025-09-19 14:55:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:55:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/student?continue to session
2025-09-19 14:55:53 [http-nio-8080-exec-1] ERROR c.h.l.security.jwt.AuthEntryPointJwt - Unauthorized error: Full authentication is required to access this resource
2025-09-19 14:56:59 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:56:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:56:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:56:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:56:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:56:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:56:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-19 14:56:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------------< com.hari:lms >----------------------------
[INFO] Building Hari Learning Management System 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:3.1.5:run (default-cli) > test-compile @ lms >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ lms ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 32 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ lms ---
[INFO] skip non existing resourceDirectory /Users/hariparthu/Hari Documents/JAVA/Hari LMS/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:testCompile (default-testCompile) @ lms ---
[INFO] Changes detected - recompiling the module! :source
[INFO] Compiling 2 source files with javac [debug release 17] to target/test-classes
[INFO] 
[INFO] <<< spring-boot-maven-plugin:3.1.5:run (default-cli) < test-compile @ lms <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:3.1.5:run (default-cli) @ lms ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2025-09-19 14:57:22 [main] INFO  com.hari.lms.LmsApplication - Starting LmsApplication using Java 21.0.8 with PID 41636 (/Users/hariparthu/Hari Documents/JAVA/Hari LMS/target/classes started by hariparthu in /Users/hariparthu/Hari Documents/JAVA/Hari LMS)
2025-09-19 14:57:22 [main] DEBUG com.hari.lms.LmsApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-09-19 14:57:22 [main] INFO  com.hari.lms.LmsApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-19 14:57:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-19 14:57:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2025-09-19 14:57:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-19 14:57:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-19 14:57:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-09-19 14:57:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-19 14:57:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 476 ms
2025-09-19 14:57:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-19 14:57:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:lmsdb user=ROOT
2025-09-19 14:57:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-19 14:57:22 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:lmsdb'
2025-09-19 14:57:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-19 14:57:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-09-19 14:57:22 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-09-19 14:57:23 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-19 14:57:23 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-19 14:57:23 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
Hibernate: 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
Hibernate: 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
Hibernate: 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
Hibernate: 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
Hibernate: 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
Hibernate: 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
2025-09-19 14:57:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
2025-09-19 14:57:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:57:23 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-19 14:57:23 [main] DEBUG c.h.lms.security.jwt.AuthTokenFilter - Filter 'authenticationJwtTokenFilter' configured for use
2025-09-19 14:57:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-19 14:57:23 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@532a48d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2515ed62, org.springframework.security.web.context.SecurityContextHolderFilter@650d95e6, org.springframework.security.web.header.HeaderWriterFilter@36d476c2, org.springframework.security.web.csrf.CsrfFilter@3d233253, org.springframework.security.web.authentication.logout.LogoutFilter@5d9e5f2f, com.hari.lms.security.jwt.AuthTokenFilter@6e4d660, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1b40c635, org.springframework.security.web.session.ConcurrentSessionFilter@2375cb0e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e4731d5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@783ac459, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38f9e69b, org.springframework.security.web.session.SessionManagementFilter@768cfd06, org.springframework.security.web.access.ExceptionTranslationFilter@319b7537, org.springframework.security.web.access.intercept.AuthorizationFilter@10bcceb5]
2025-09-19 14:57:24 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-09-19 14:57:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-09-19 14:57:24 [main] INFO  com.hari.lms.LmsApplication - Started LmsApplication in 2.009 seconds (process running for 2.113)
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default ADMIN user password: admin / admin123
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default INSTRUCTOR user password: instructor / instructor123
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default STUDENT user password: student / student123

🎓 HariLMS Demo Users Ready!
==================================
👑 ADMIN    : admin / admin123
👨‍🏫 INSTRUCTOR: instructor / instructor123
👨‍🎓 STUDENT   : student / student123
==================================

2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:57:24 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        courses c1_0
Hibernate: 
    select
        count(*) 
    from
        courses c1_0
🔍 Current course count: 17
⏭️ Skipping course creation - 17 courses already exist

=======================================================
   Hari LMS Application Started Successfully! 🚀
=======================================================
   🌐 Application URL: http://localhost:8080
   📚 Swagger UI: http://localhost:8080/swagger-ui.html
   📖 API Docs: http://localhost:8080/api-docs
=======================================================

2025-09-19 14:57:50 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-19 14:57:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-19 14:57:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-19 14:57:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-19 14:57:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:57:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 78D1FE0271093E0F7F787D4DE10EB5A9, for principal com.hari.lms.security.UserDetailsImpl@22
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@5904991d]
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]
2025-09-19 14:57:50 [http-nio-8080-exec-3] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /dashboard
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /dashboard
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/dashboard
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]]
2025-09-19 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2025-09-19 14:57:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login?id=5c8ba7de-9c01-40d5-ba00-8809ea41572f&vscodeBrowserReqId=1758274076795
2025-09-19 14:57:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:57:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /login?id=5c8ba7de-9c01-40d5-ba00-8809ea41572f&vscodeBrowserReqId=1758274076795
2025-09-19 14:58:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /
2025-09-19 14:58:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 14:58:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured HEAD /
2025-09-19 14:58:48 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:58:48 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:58:48 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:58:48 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:58:48 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:58:48 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:58:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-19 14:58:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------------< com.hari:lms >----------------------------
[INFO] Building Hari Learning Management System 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:3.1.5:run (default-cli) > test-compile @ lms >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ lms ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 32 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ lms ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ lms ---
[INFO] skip non existing resourceDirectory /Users/hariparthu/Hari Documents/JAVA/Hari LMS/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:testCompile (default-testCompile) @ lms ---
[INFO] Changes detected - recompiling the module! :source
[INFO] Compiling 2 source files with javac [debug release 17] to target/test-classes
[INFO] 
[INFO] <<< spring-boot-maven-plugin:3.1.5:run (default-cli) < test-compile @ lms <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:3.1.5:run (default-cli) @ lms ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2025-09-19 14:59:19 [main] INFO  com.hari.lms.LmsApplication - Starting LmsApplication using Java 21.0.8 with PID 45040 (/Users/hariparthu/Hari Documents/JAVA/Hari LMS/target/classes started by hariparthu in /Users/hariparthu/Hari Documents/JAVA/Hari LMS)
2025-09-19 14:59:19 [main] DEBUG com.hari.lms.LmsApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-09-19 14:59:19 [main] INFO  com.hari.lms.LmsApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-19 14:59:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-19 14:59:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2025-09-19 14:59:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-19 14:59:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-19 14:59:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-09-19 14:59:19 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-19 14:59:19 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 480 ms
2025-09-19 14:59:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-19 14:59:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:lmsdb user=ROOT
2025-09-19 14:59:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-19 14:59:19 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:lmsdb'
2025-09-19 14:59:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-19 14:59:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-09-19 14:59:19 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-09-19 14:59:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-19 14:59:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-19 14:59:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
Hibernate: 
    create table courses (
        is_approved boolean not null,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        instructor_id bigint not null,
        updated_at timestamp(6),
        title varchar(100) not null,
        description varchar(1000) not null,
        primary key (id)
    )
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
Hibernate: 
    create table enrollments (
        progress integer not null check ((progress<=100) and (progress>=0)),
        course_id bigint not null,
        enrollment_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_id bigint unique,
        student_id bigint not null,
        updated_at timestamp(6),
        completed_lessons TEXT,
        primary key (id),
        constraint unique_enrollment unique (student_id, course_id)
    )
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
Hibernate: 
    create table lessons (
        sequence_number integer not null,
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content_type varchar(20) not null check (content_type in ('TEXT','VIDEO','PDF')),
        title varchar(100) not null,
        content_url varchar(500),
        content_text TEXT,
        primary key (id)
    )
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
Hibernate: 
    create table payments (
        amount numeric(10,2) not null,
        completed_at timestamp(6),
        course_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        student_id bigint not null,
        updated_at timestamp(6),
        status varchar(20) not null check (status in ('PENDING','PROCESSING','COMPLETED','FAILED','CANCELLED','REFUNDED')),
        payment_method varchar(50),
        transaction_id varchar(100),
        payment_details varchar(500),
        primary key (id)
    )
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        role varchar(20) not null check (role in ('ADMIN','INSTRUCTOR','STUDENT')),
        username varchar(20) not null unique,
        email varchar(50) not null unique,
        full_name varchar(100) not null,
        password varchar(120) not null,
        primary key (id)
    )
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
Hibernate: 
    alter table if exists courses 
       add constraint FKcyfum8goa6q5u13uog0563gyp 
       foreign key (instructor_id) 
       references users
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists enrollments 
       add constraint FKho8mcicp4196ebpltdn9wl6co 
       foreign key (course_id) 
       references courses
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
Hibernate: 
    alter table if exists enrollments 
       add constraint FK80n1r64d0unmr749ahmuty8m1 
       foreign key (payment_id) 
       references payments
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists enrollments 
       add constraint FK2lha5vwilci2yi3vu5akusx4a 
       foreign key (student_id) 
       references users
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists lessons 
       add constraint FK17ucc7gjfjddsyi0gvstkqeat 
       foreign key (course_id) 
       references courses
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
Hibernate: 
    alter table if exists payments 
       add constraint FK8nlm4urshp5drsk0nlkprig36 
       foreign key (course_id) 
       references courses
2025-09-19 14:59:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FKdn7tvyxt0pb47kudo6f97jauk 
       foreign key (student_id) 
       references users
2025-09-19 14:59:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 14:59:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-19 14:59:20 [main] DEBUG c.h.lms.security.jwt.AuthTokenFilter - Filter 'authenticationJwtTokenFilter' configured for use
2025-09-19 14:59:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-19 14:59:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7111dd38, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@783ac459, org.springframework.security.web.context.SecurityContextHolderFilter@1ab07559, org.springframework.security.web.header.HeaderWriterFilter@694b818f, org.springframework.security.web.authentication.logout.LogoutFilter@2375cb0e, com.hari.lms.security.jwt.AuthTokenFilter@2542e124, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c1ec792, org.springframework.security.web.session.ConcurrentSessionFilter@5875480e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17baf642, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fc9f8bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5232be9b, org.springframework.security.web.session.SessionManagementFilter@37cb41fa, org.springframework.security.web.access.ExceptionTranslationFilter@364c430a, org.springframework.security.web.access.intercept.AuthorizationFilter@650d95e6]
2025-09-19 14:59:21 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-09-19 14:59:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-09-19 14:59:21 [main] INFO  com.hari.lms.LmsApplication - Started LmsApplication in 2.022 seconds (process running for 2.137)
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default ADMIN user password: admin / admin123
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default INSTRUCTOR user password: instructor / instructor123
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
🔄 Updated default STUDENT user password: student / student123

🎓 HariLMS Demo Users Ready!
==================================
👑 ADMIN    : admin / admin123
👨‍🏫 INSTRUCTOR: instructor / instructor123
👨‍🎓 STUDENT   : student / student123
==================================

2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:59:21 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        courses c1_0
Hibernate: 
    select
        count(*) 
    from
        courses c1_0
🔍 Current course count: 17
⏭️ Skipping course creation - 17 courses already exist

=======================================================
   Hari LMS Application Started Successfully! 🚀
=======================================================
   🌐 Application URL: http://localhost:8080
   📚 Swagger UI: http://localhost:8080/swagger-ui.html
   📖 API Docs: http://localhost:8080/api-docs
=======================================================

2025-09-19 14:59:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-19 14:59:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-19 14:59:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /login
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session E081DE5CAD329BA7445FB9045AD240C9, for principal com.hari.lms.security.UserDetailsImpl@22
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@bd6ee9d]
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]
2025-09-19 14:59:52 [http-nio-8080-exec-1] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /dashboard
2025-09-19 14:59:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /dashboard
2025-09-19 14:59:52 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=com.hari.lms.security.UserDetailsImpl@22, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_STUDENT]]]
2025-09-19 14:59:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /dashboard
2025-09-19 14:59:52 [http-nio-8080-exec-2] ERROR c.h.l.e.GlobalExceptionHandler - Unexpected error: Request method 'POST' is not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:505)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1275)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.hari.lms.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-09-19 15:01:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 15:01:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists courses cascade 
Hibernate: 
    drop table if exists courses cascade 
2025-09-19 15:01:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists enrollments cascade 
Hibernate: 
    drop table if exists enrollments cascade 
2025-09-19 15:01:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists lessons cascade 
Hibernate: 
    drop table if exists lessons cascade 
2025-09-19 15:01:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists payments cascade 
2025-09-19 15:01:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-09-19 15:01:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-19 15:01:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
